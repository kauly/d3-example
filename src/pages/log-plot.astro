---
import Layout from "@layout/index.astro";
---

<Layout>
  <div id="chart"></div>
</Layout>

<script>
  import * as d3 from "d3";

  import data from "@utils/logdata.json?url";
  import type { Celestial } from "@utils/types";

  async function draw() {
    // data
    const dataset = (await d3.json(data)) as Celestial[];
    const sizeAccessor = (d: Celestial) => d.size;
    const nameAccessor = (d: Celestial) => d.name;

    // dimensions
    let dimensions = {
      width: 200,
      height: 500,
      margin: 50,
    };

    // scale
    const universeScale = d3.scaleLog(d3.extent(dataset, sizeAccessor), [
      dimensions.height - dimensions.margin,
      dimensions.margin,
    ]);

    // draw image
    const svg = d3
      .select("#chart")
      .append("svg")
      .attr("width", dimensions.width)
      .attr("height", dimensions.height)
      .attr("class", "bg-gray-200/20");

    const circlesGroup = svg.append("g").style("dominant-baseline", "middle");

    circlesGroup
      .selectAll("circle")
      .data(dataset)
      .join("circle")
      .attr("cx", dimensions.margin)
      .attr("cy", (d) => universeScale(sizeAccessor(d)))
      .attr("r", 6);

    circlesGroup
      .selectAll("text")
      .data(dataset)
      .join("text")
      .attr("x", dimensions.margin + 15)
      .attr("y", (d) => universeScale(sizeAccessor(d)))
      .attr("fill", "#000")
      .text(nameAccessor);

    const axis = d3.axisLeft(universeScale);

    svg
      .append("g")
      .attr("transform", `translate(${dimensions.margin}, 0)`)
      .call(axis);
  }

  draw();
</script>
